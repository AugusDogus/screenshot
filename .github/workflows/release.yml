name: release
on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64 ]
    steps:
      - uses: actions/checkout@v5

      - uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: latest

      - uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.arch }}

      - name: Ensure Ninja
        shell: pwsh
        run: |
          if (-not (Get-Command ninja -ErrorAction SilentlyContinue)) {
            choco install ninja --no-progress -y
          }
          ninja --version

      - name: Configure + Build (CMake workflow preset)
        run: cmake --workflow --preset build

      - name: Stage EXE
        id: stage
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $exeName = "screenshot-$tag-${{ matrix.arch }}.exe"
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item "build/screenshot.exe" "dist/$exeName"
          "exe_path=dist/$exeName"  | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding ascii

      - uses: actions/upload-artifact@v4
        with:
          name: exe-${{ matrix.arch }}
          path: ${{ steps.stage.outputs.exe_path }}

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: exe-x86
          path: dist/x86
      - uses: actions/download-artifact@v4
        with:
          name: exe-x64
          path: dist/x64

      - name: Create GitHub Release (x86 + x64, no notes)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: |
            dist/x86/*.exe
            dist/x64/*.exe
